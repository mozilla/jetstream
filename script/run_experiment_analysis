#!/usr/bin/env python3

"""
Fetches experiments from Experimenter and runs analysis on active experiments.
"""

from argparse import ArgumentParser
from datetime import datetime, timedelta
import os
import sys
import pytz

# sys.path needs to be modified to enable package imports from parent
# and sibling directories. Also see:
# https://stackoverflow.com/questions/6323860/sibling-package-imports/23542795#23542795
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
from pensieve.experimenter import ExperimentCollection
from pensieve.analysis import Analysis


parser = ArgumentParser(description=__doc__)
parser.add_argument(
    "--project_id", default="moz-fx-data-experiments", help="Default project",
)
parser.add_argument(
    "--dataset_id", default="mozanalysis", help="Default dataset",
)
parser.add_argument(
    "--date",
    help="Last date for which data should be analysed",
    type=lambda s: datetime.strptime(s, "%Y-%m-%d"),
)


def format_date(date):
    """Returns the current date with UTC timezone and time set to 00:00:00."""
    return datetime.combine(date, datetime.min.time()).replace(tzinfo=pytz.utc)


def main():
    args = parser.parse_args()

    # fetch experiments that are still active
    collection = ExperimentCollection.from_experimenter()
    if args.date is None:
        date = format_date(datetime.today())
    else:
        date = format_date(args.date)

    active_experiments = collection.end_on_or_after(date)

    # calculate metrics for experiments and write to BigQuery
    analysis = Analysis(args.project_id, args.dataset_id)

    for experiment in active_experiments.experiments:
        analysis.run(experiment, date)


if __name__ == "__main__":
    main()
